import { createI18n } from 'vue-i18n'; 
import en from '../locales/en.json'; 
import de from '../locales/de.json'; 

// Object containing translation messages for different locales
const messages = {
  en, 
  de, 
};

/**
 * Constructor of i18n
 * @type {I18n<{de: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}, en: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}} extends Record<string, unknown> ? {de: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}, en: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}} : {}, {messages: {de: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}, en: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}}, fallbackLocale: string, locale: string}["datetimeFormats"] extends Record<string, unknown> ? {messages: {de: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}, en: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}}, fallbackLocale: string, locale: string}["datetimeFormats"] : {}, {messages: {de: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}, en: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}}, fallbackLocale: string, locale: string}["numberFormats"] extends Record<string, unknown> ? {messages: {de: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}, en: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}}, fallbackLocale: string, locale: string}["numberFormats"] : {}, string extends string ? string : Locale, true> | I18n<{de: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}, en: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}} extends Record<string, unknown> ? {de: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}, en: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}} : {}, {messages: {de: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}, en: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}}, fallbackLocale: string, locale: string}["datetimeFormats"] extends Record<string, unknown> ? {messages: {de: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}, en: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}}, fallbackLocale: string, locale: string}["datetimeFormats"] : {}, {messages: {de: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}, en: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}}, fallbackLocale: string, locale: string}["numberFormats"] extends Record<string, unknown> ? {messages: {de: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}, en: {language: string, documentation: string, aboutUs: string, gtcs: string, minimization: string, maximization: string, condition: string, constraint: string, addConstraint: string, solve: string}}, fallbackLocale: string, locale: string}["numberFormats"] : {}, string extends string ? string : Locale, false>}
 */

let i18n = createI18n({
  locale: 'de', // The default locale is set to German
  fallbackLocale: 'de', // If a translation for the active locale is not found, fallback to German
  messages, 
});

// Exporting the i18n instance so it can be used across the application
export default i18n; 


/*
This file is part of LinSolve. LinSolve is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or any later version.
LinSolve is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with LinSolve. If not, see <Licenses- GNU Project - Free Software Foundation >.
*/